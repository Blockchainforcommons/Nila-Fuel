"use strict";
/* Autogenerated file. Do not edit manually. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreditAbi__factory = void 0;
/* tslint:disable */
/* eslint-disable */
/*
  Fuels version: 0.48.1
  Forc version: 0.40.1
  Fuel-Core version: 0.19.0
*/
var fuels_1 = require("fuels");
var _abi = {
    "types": [
        {
            "typeId": 0,
            "type": "()",
            "components": [],
            "typeParameters": null
        },
        {
            "typeId": 1,
            "type": "b256",
            "components": null,
            "typeParameters": null
        },
        {
            "typeId": 2,
            "type": "enum Error",
            "components": [
                {
                    "name": "PoolDoesNotExist",
                    "type": 0,
                    "typeArguments": null
                },
                {
                    "name": "LessThenMinimum",
                    "type": 0,
                    "typeArguments": null
                },
                {
                    "name": "MoreThenMaxnmum",
                    "type": 0,
                    "typeArguments": null
                },
                {
                    "name": "WrongDurationPool",
                    "type": 0,
                    "typeArguments": null
                },
                {
                    "name": "MoreThenAvailable",
                    "type": 0,
                    "typeArguments": null
                },
                {
                    "name": "AddressNotWhitelisted",
                    "type": 0,
                    "typeArguments": null
                },
                {
                    "name": "InsufficientCollateral",
                    "type": 0,
                    "typeArguments": null
                },
                {
                    "name": "BytecodeRootAlreadySet",
                    "type": 0,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 3,
            "type": "enum Identity",
            "components": [
                {
                    "name": "Address",
                    "type": 5,
                    "typeArguments": null
                },
                {
                    "name": "ContractId",
                    "type": 6,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 4,
            "type": "str[3]",
            "components": null,
            "typeParameters": null
        },
        {
            "typeId": 5,
            "type": "struct Address",
            "components": [
                {
                    "name": "value",
                    "type": 1,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 6,
            "type": "struct ContractId",
            "components": [
                {
                    "name": "value",
                    "type": 1,
                    "typeArguments": null
                }
            ],
            "typeParameters": null
        },
        {
            "typeId": 7,
            "type": "u64",
            "components": null,
            "typeParameters": null
        }
    ],
    "functions": [
        {
            "inputs": [
                {
                    "name": "amount",
                    "type": 7,
                    "typeArguments": null
                },
                {
                    "name": "rate",
                    "type": 7,
                    "typeArguments": null
                },
                {
                    "name": "asset",
                    "type": 6,
                    "typeArguments": null
                },
                {
                    "name": "_type",
                    "type": 4,
                    "typeArguments": null
                },
                {
                    "name": "duration",
                    "type": 7,
                    "typeArguments": null
                },
                {
                    "name": "predicateaddress",
                    "type": 3,
                    "typeArguments": null
                }
            ],
            "name": "borrow",
            "output": {
                "name": "",
                "type": 0,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read",
                        "write"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "contract_bytecode_root",
                    "type": 6,
                    "typeArguments": null
                }
            ],
            "name": "initialize",
            "output": {
                "name": "",
                "type": 0,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read",
                        "write"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "asset",
                    "type": 6,
                    "typeArguments": null
                },
                {
                    "name": "type_",
                    "type": 7,
                    "typeArguments": null
                },
                {
                    "name": "pool",
                    "type": 6,
                    "typeArguments": null
                }
            ],
            "name": "pool",
            "output": {
                "name": "",
                "type": 0,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "write"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "denom_asset",
                    "type": 6,
                    "typeArguments": null
                }
            ],
            "name": "refinance",
            "output": {
                "name": "",
                "type": 0,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read",
                        "write"
                    ]
                }
            ]
        },
        {
            "inputs": [],
            "name": "repay",
            "output": {
                "name": "",
                "type": 7,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read",
                        "write"
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "type_",
                    "type": 7,
                    "typeArguments": null
                }
            ],
            "name": "supply",
            "output": {
                "name": "",
                "type": 0,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read",
                        "write"
                    ]
                }
            ]
        },
        {
            "inputs": [],
            "name": "withdraw",
            "output": {
                "name": "",
                "type": 0,
                "typeArguments": null
            },
            "attributes": [
                {
                    "name": "storage",
                    "arguments": [
                        "read",
                        "write"
                    ]
                }
            ]
        }
    ],
    "loggedTypes": [
        {
            "logId": 0,
            "loggedType": {
                "name": "",
                "type": 2,
                "typeArguments": []
            }
        },
        {
            "logId": 1,
            "loggedType": {
                "name": "",
                "type": 2,
                "typeArguments": []
            }
        },
        {
            "logId": 2,
            "loggedType": {
                "name": "",
                "type": 2,
                "typeArguments": []
            }
        },
        {
            "logId": 3,
            "loggedType": {
                "name": "",
                "type": 2,
                "typeArguments": []
            }
        },
        {
            "logId": 4,
            "loggedType": {
                "name": "",
                "type": 2,
                "typeArguments": []
            }
        },
        {
            "logId": 5,
            "loggedType": {
                "name": "",
                "type": 2,
                "typeArguments": []
            }
        }
    ],
    "messagesTypes": [],
    "configurables": [
        {
            "name": "MINIMUM_DEPOSIT",
            "configurableType": {
                "name": "",
                "type": 7,
                "typeArguments": null
            },
            "offset": 14104
        },
        {
            "name": "MAXIMUM_DEPOSIT",
            "configurableType": {
                "name": "",
                "type": 7,
                "typeArguments": null
            },
            "offset": 14112
        },
        {
            "name": "ORACLE_ID",
            "configurableType": {
                "name": "",
                "type": 1,
                "typeArguments": null
            },
            "offset": 14024
        }
    ]
};
var CreditAbi__factory = /** @class */ (function () {
    function CreditAbi__factory() {
    }
    CreditAbi__factory.createInterface = function () {
        return new fuels_1.Interface(_abi);
    };
    CreditAbi__factory.connect = function (id, accountOrProvider) {
        return new fuels_1.Contract(id, _abi, accountOrProvider);
    };
    CreditAbi__factory.abi = _abi;
    return CreditAbi__factory;
}());
exports.CreditAbi__factory = CreditAbi__factory;
//# sourceMappingURL=CreditAbi__factory.js.map